{"version":3,"sources":["checkbox.js","control.js","image.js","datetime.js","select.js","init.js","initMultiple.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AD5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin-default.js","sourcesContent":["$(function () {\n    $('.adminCheckboxRow').on('change', function(e) {\n        var $self = $(this),\n            $row = $self.closest('tr');\n\n        if($self.is(':checked')) {\n            $row.addClass('info');\n        } else {\n            $row.removeClass('info');\n        }\n    });\n\n    $('.adminCheckboxAll').on('change', function() {\n        var $self = $(this),\n            $checkboxes = $('.adminCheckboxRow');\n\n        if($self.is(':checked')) {\n            $checkboxes.not(':checked').each(function(i, a) {\n                this.checked = true;\n                $(this).trigger('change');\n            });\n        } else {\n            $checkboxes.filter(':checked').each(function(i, a) {\n                this.checked = false;\n                $(this).trigger('change');\n            });\n        }\n    });\n});","$(function () {\n    $(document).delegate('.btn-delete', 'click', function (e) {\n        e.preventDefault();\n        var form = $(this).closest('form');\n        bootbox.confirm(window.Admin.Settings.lang.table['delete-confirm'], function (result) {\n            if (result) {\n                form.submit();\n            }\n        });\n    });\n    bootbox.setDefaults('locale', window.Admin.Settings.locale);\n});","$(function () {\n    $(document).delegate('*[data-toggle=\"lightbox\"]', 'click', function (e) {\n        e.preventDefault();\n        $(this).ekkoLightbox({\n            always_show_close: false\n        });\n    });\n});","$(function () {\n    $('.input-date').each(function () {\n        var $self = $(this);\n        $self.datetimepicker({\n            locale: window.Admin.Settings.locale\n        }).trigger('dp.change').on('dp.change', function () {\n            $self.change();\n        });\n    });\n});","$(function () {\n    $('.input-select').each(function () {\n        var options = {},\n            $self = $(this);\n\n        if ($self.hasClass('input-taggable')) {\n            options['tags'] = true;\n        }\n\n        $self.select2(options)\n    });\n});","window.Admin.Components\n    .add('ckeditor', function() {\n        switchOn_handler = function (textarea_id, params) {\n            CKEDITOR.disableAutoInline = true;\n\n            var params = $.extend({}, params);\n\n            return CKEDITOR.replace(textarea_id, params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy()\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.insertText(data);\n                    break;\n                case 'changeHeight':\n                    editor.resize('100%', data);\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'ckeditor',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    })\n    .add('tinymce', function() {\n        switchOn_handler = function (textarea_id, params) {\n            var params = $.extend({\n                selector:'#'+textarea_id\n            }, params);\n\n\n            return tinymce.init(params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy();\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.insertContent(data);\n                    break;\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'tinymce',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    }).add('simplemde', function() {\n        switchOn_handler = function (textarea_id, params) {\n            var params = $.extend({\n                element: $(\"#\"+textarea_id)[0]\n            }, params);\n\n\n            return new SimpleMDE(params);\n        };\n\n        switchOff_handler = function (editor, textarea_id) {\n            editor.destroy();\n        }\n\n        exec_handler = function (editor, command, textarea_id, data) {\n            switch (command) {\n                case 'insert':\n                    editor.codemirror.replaceSelection(data);\n                    break;\n            }\n        }\n\n        window.Admin.WYSIWYG.add(\n            'simplemde',\n            switchOn_handler,\n            switchOff_handler,\n            exec_handler\n        );\n    });\n\n\n\n\n$(function () {\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n    });\n\n    $('form[data-type=\"display-actions\"]').on('submit', function(e) {\n        var $form = $(this),\n            $btn = $(e.target.action),\n            $checkboxes = $('.adminCheckboxRow').filter(':checked');\n\n        if (!$checkboxes.length) {\n            e.preventDefault();\n        }\n\n        this.action = $btn.data('action');\n        this.method = $btn.data('method');\n\n        $checkboxes.each(function () {\n            $form.append('<input type=\"hidden\" name=\"id[]\" value=\"' + $(this).val() + '\" />');\n        });\n    });\n\n    $('.inline-editable').editable();\n\n    window.Admin.Components.init();\n    window.Admin.Controllers.call();\n});","$(function () {\n    $('.imageUploadMultiple').each(function (index, item) {\n        var $item = $(item);\n        var $group = $item.closest('.form-group');\n        var $innerGroup = $item.find('.form-group');\n        var $errors = $item.find('.errors');\n        var $input = $item.find('.imageValue');\n        var flow = new Flow({\n            target: $item.data('target'),\n            testChunks: false,\n            chunkSize: 1024 * 1024 * 1024,\n            query: {\n                _token: $item.data('token')\n            }\n        });\n        var updateValue = function () {\n            var values = [];\n            $item.find('img[data-value]').each(function () {\n                values.push($(this).data('value'));\n            });\n            $input.val(values.join(','));\n        };\n        flow.assignBrowse($item.find('.imageBrowse'));\n        flow.on('filesSubmitted', function (file) {\n            flow.upload();\n        });\n        flow.on('fileSuccess', function (file, message) {\n            flow.removeFile(file);\n\n            $errors.html('');\n            $group.removeClass('has-error');\n\n            var result = $.parseJSON(message);\n\n            $innerGroup.append($($('#thumbnail_template').html()).find('img').attr('src', result.url).attr('data-value', result.value));\n            updateValue();\n        });\n        flow.on('fileError', function (file, message) {\n            flow.removeFile(file);\n\n            var response = $.parseJSON(message);\n            var errors = '';\n            $.each(response, function (index, error) {\n                errors += '<p class=\"help-block\">' + error + '</p>'\n            });\n            $errors.html(errors);\n            $group.addClass('has-error');\n        });\n        $item.on('click', '.imageRemove', function (e) {\n            e.preventDefault();\n            $(this).closest('.imageThumbnail').remove();\n            updateValue();\n        });\n\n        $innerGroup.sortable({\n            onUpdate: function () {\n                updateValue();\n            }\n        });\n    });\n});"],"sourceRoot":"/source/"}